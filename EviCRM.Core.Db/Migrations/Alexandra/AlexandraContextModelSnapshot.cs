// <auto-generated />
using System;
using EviCRM.Core.Db.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EviCRM.Core.Db.Migrations.Alexandra
{
    [DbContext(typeof(AlexandraContext))]
    partial class AlexandraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EviCRM.Core.Db.Entities.Alexandra.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("MobilePhoneNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("VCard")
                        .HasColumnType("text");

                    b.Property<DateTime?>("WhenInserted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("WhoInserted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WhoUpdated")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("EviCRM.Core.Db.Entities.Alexandra.Map", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography (point)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("User")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("WhenInserted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("WhoInserted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WhoUpdated")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("EviCRM.Core.Db.Entities.Alexandra.Poll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CorrectOptionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Explanations")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultipleAnswers")
                        .HasColumnType("boolean");

                    b.Property<string>("MultipleAnswers")
                        .HasColumnType("jsonb");

                    b.Property<string>("Options")
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("WhenInserted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("WhoInserted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WhoUpdated")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Poll");
                });
#pragma warning restore 612, 618
        }
    }
}
